{"version":3,"file":"static/js/317.58f49fc3.chunk.js","mappings":"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","sources":["components/Search.js","services/api.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport { AppContext } from '../Context';\r\nimport { useInView } from 'react-intersection-observer'\r\nimport { useQuery, keepPreviousData, useQueryClient, useInfiniteQuery } from '@tanstack/react-query';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { Button, CardActionArea, InputBase } from '@mui/material';\r\nimport { themeOptions } from '../App';\r\n\r\n\r\nfunction Search() {\r\n  const { state, dispatch } = useContext(AppContext);\r\n  const [searchTerm, setSearchTerm] = useState(state.searchTerm);\r\n  const [currentPage, setCurrentPage] = useState(state.currentPage);\r\n  const searchInput = useRef(null);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setSearchTerm(searchInput.current.value);\r\n    dispatch({ type: 'SET_SEARCH_TERM', payload: searchInput.current.value });\r\n  };\r\n  \r\n  function SearchResults() {\r\n    \r\n    const queryClient = useQueryClient()\r\n    const [page, setPage] = React.useState(state.currentPage || 1)\r\n\r\n    function handleNextPage () {\r\n      setPage((old) => (data?.hasMore ? old + 1 : old))\r\n      dispatch({ type: 'SET_CURRENT_PAGE', payload: page + 1 });\r\n    };\r\n\r\n    function handlePrevPage () {\r\n      setPage((old) => Math.max(old - 1, 0))\r\n      dispatch({ type: 'SET_CURRENT_PAGE', payload: Math.max(page - 1, 0) });\r\n    };\r\n\r\n    async function fetchProjects(page = 0) {\r\n      const { data } = await api.get(`/?s=${searchTerm}&page=${page}`)\r\n      console.log(data);\r\n\r\n      return data\r\n    }\r\n    const { status, data, error, isFetching, isPlaceholderData } = useQuery({\r\n      queryKey: ['movies', page],\r\n      queryFn: () => fetchProjects(page),\r\n      placeholderData: keepPreviousData,\r\n      initialPageParam: 1,\r\n      staleTime: 5000,\r\n      enabled: !!searchTerm && !!currentPage\r\n    })\r\n  \r\n    // Prefetch the next page!\r\n    React.useEffect(() => {\r\n      if (!isPlaceholderData && data?.hasMore) {\r\n        queryClient.prefetchQuery({\r\n          queryKey: ['movies', page + 1],\r\n          queryFn: () => fetchProjects(page + 1),\r\n        })\r\n      }\r\n    }, [data, isPlaceholderData, page, queryClient])\r\n  \r\n    return (\r\n      <div>\r\n        {status === 'pending' ? (\r\n          <div></div>\r\n        ) : status === 'error' ? (\r\n          <div>Error: {error.message}</div>\r\n        ) : (\r\n          // `data` will either resolve to the latest page's data\r\n          // or if fetching a new page, the last successful page's data\r\n          <div>\r\n            {data.movies?.map((movie) => (\r\n              <Card sx={{ maxWidth: '100%', my: 3 }} key={movie.imdbID}>\r\n                <CardActionArea \r\n                  component={Link} to={`/movie/${movie.imdbID}`} \r\n                  //onClick={() => handlePagination(currentPage)}\r\n                  sx={{ display: 'flex' }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    width=\"130\"\r\n                    image={movie.Poster}\r\n                    alt={movie.Title}\r\n                    sx={{ width: 130 , height: 196}}\r\n                  />\r\n                  <Box sx={{ flex: 1 }}>\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {movie.Title}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {movie.Year}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Box>\r\n                </CardActionArea>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {data?.movies && (\r\n          <>\r\n            <div>Current Page: {page}</div>\r\n            <Box sx={{ my: 5, display: 'flex', justifyContent: 'center'}}>            \r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handlePrevPage}\r\n                disabled={page === 1}\r\n                sx={{ mr: 3 }}\r\n                >\r\n                Previous Page\r\n              </Button>{' '}\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleNextPage}\r\n                disabled={isPlaceholderData || !data?.hasMore}\r\n                >\r\n                Next Page\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )}\r\n        {\r\n          // background loading\r\n          isFetching ? <span> Loading...</span> : null\r\n        }{' '}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Box sx={{ textAlign: 'center' }} >\r\n        <Typography variant=\"h1\" gutterBottom sx={{ color: themeOptions.palette.text.primary }}>\r\n          <Link to={`/`} style={{ color: themeOptions.palette.text.primary, textDecoration: 'none' }}>\r\n          M<Typography variant=\"span\" sx={{ color: themeOptions.palette.primary.main, fontWeight: '900' }}>oo</Typography>gle\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Paper \r\n        component=\"form\"\r\n        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center' }}\r\n        onSubmit={handleSearch}\r\n      >\r\n        <InputBase\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Search\"\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          name='s'\r\n          inputRef={searchInput}\r\n          type='search'\r\n          //value={searchTerm}\r\n          //onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n\r\n      <SearchResults></SearchResults>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import axios from 'axios';\r\n\r\nconst apiKey = 'a94409cf';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://omdbapi.com',\r\n  params: {\r\n    apikey: apiKey,\r\n  },\r\n});\r\n\r\n// Adding an interceptor to transform the response data format\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    if (response.data?.Search){\r\n      const totalPages = Math.ceil(parseInt(response.data.totalResults, 10) / 10) || 0;\r\n      const currentPage = response.config.params.page || 1;\r\n      const modifiedResponse = {\r\n        data: {\r\n          movies: response.data.Search,\r\n          hasMore: totalPages > currentPage ? true : false,\r\n          totalResults: response.data.totalResults\r\n        }\r\n      };\r\n      //console.log(modifiedResponse);\r\n      return modifiedResponse;\r\n    } else {\r\n      return response;\r\n    }\r\n  },\r\n  (error) => {\r\n    // Handle errors \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"names":["state","dispatch","useContext","AppContext","searchTerm","setSearchTerm","useState","currentPage","setCurrentPage","searchInput","useRef","SearchResults","_data$movies","queryClient","useQueryClient","page","setPage","React","async","fetchProjects","arguments","length","undefined","data","api","get","concat","console","log","status","error","isFetching","isPlaceholderData","useQuery","queryKey","queryFn","placeholderData","keepPreviousData","initialPageParam","staleTime","enabled","hasMore","prefetchQuery","_jsxs","children","_jsx","message","movies","map","movie","Card","sx","maxWidth","my","CardActionArea","component","Link","to","imdbID","display","CardMedia","width","image","Poster","alt","Title","height","Box","flex","CardContent","Typography","gutterBottom","variant","color","Year","_Fragment","justifyContent","Button","onClick","old","Math","max","type","payload","disabled","mr","textAlign","themeOptions","palette","text","primary","style","textDecoration","main","fontWeight","Paper","p","alignItems","onSubmit","e","preventDefault","current","value","InputBase","ml","placeholder","inputProps","name","inputRef","IconButton","SearchIcon","axios","create","baseURL","params","apikey","interceptors","response","use","_response$data","Search","totalPages","ceil","parseInt","totalResults","config","Promise","reject"],"sourceRoot":""}